<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnbydate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKYAAACiCAYAAADLGbZhAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADIWlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS41LWMwMjEgNzkuMTU0OTExLCAyMDEzLzEwLzI5LTExOjQ3OjE2ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgKFdpbmRvd3MpIiB4bXBNTTpJbnN0YW5jZUlE
        PSJ4bXAuaWlkOjMzM0RGOTc2Mjg3MTExRTlBNDFBRTg3QzM5MjBBRTA5IiB4bXBNTTpEb2N1bWVudElE
        PSJ4bXAuZGlkOjMzM0RGOTc3Mjg3MTExRTlBNDFBRTg3QzM5MjBBRTA5Ij4gPHhtcE1NOkRlcml2ZWRG
        cm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MzMzREY5NzQyODcxMTFFOUE0MUFFODdDMzkyMEFF
        MDkiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6MzMzREY5NzUyODcxMTFFOUE0MUFFODdDMzkyMEFF
        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
        iUu1AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="Timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>